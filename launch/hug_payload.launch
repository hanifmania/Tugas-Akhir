<launch>
    <!--  ################  Input arguments  ################  -->
    <arg name="Camera" default="false"/>
    <arg name="enableBumblebee" default="false"/>
    <arg name="enableBumblebeeTF" default="false"/>
    <arg name="Guppy" default="false"/>
    <arg name="Aris" default="false"/>
    <arg name="Multibeam" default="false"/>
    <arg name="SSS" default="false"/>
    <arg name="Micron" default="false"/>
    <arg name="EchoSounders" default="true"/>
    <arg name="enableModem" default="false"/>
    <arg name="enableRotativePayload" default="false"/>
    <arg name="enableBeacons" default="false"/>
    <arg name="enableAirmarEchosounder" default="false"/>
    <arg name="enableProfiler" default="false"/>

    <!-- ################## AVOID TO TOUCH ANYTHING BELOW THIS LINE ##################### -->

    <!--  ################  Actuators  ################  -->
    <node if="$(arg enableBeacons)" name="switch_board" pkg="hug_switch_board" type="hug_switch_board.py" output="screen" />
    <include if="$(arg enableRotativePayload)" file="$(find cola2_hug)/launch/rotative_payload.launch" />

    <!--  ################  Communication  ################  -->
    <node if="$(arg enableModem)" name="evologics_modem" pkg="evologics_modem" type="evologics_modem_ros.py" respawn="true"/>

    <!--  ################  Perception  ################  -->
    <node if="$(arg Aris)" name="soundmetrics_aris3000" pkg="soundmetrics_aris3000" type="soundmetrics_aris3000.py" respawn="true"/>
    <include if="$(arg enableAirmarEchosounder)" file="$(find cola2_hug)/launch/airmar_echosounder.launch"/>
    <include if="$(arg Guppy)" file="$(find cola2_hug)/launch/guppy_color.launch" />
    <node if="$(arg SSS)" name="imagenex_side_scan_sonar" pkg="imaginex_side_scan_sonar" type="imagenex_side_scan_sonar" output="screen"/>
    <node if="$(arg SSS)" name="sss_to_laserscan" pkg="imaginex_side_scan_sonar" type="sss_to_laserscan.py" output="screen"/>
    <node if="$(arg Multibeam)" name="multibeam" pkg="imaginex_multibeam_sonar" type="multibeam_online.py" output="screen"/>
    <node if="$(arg Camera)" name="framegrabber_hug" pkg="bt878_framegrabber" type="framegrabber" respawn="true"/>
    <node if="$(arg Micron)" name="micron" pkg="tritech_msis" type="tritech_msis" output="screen"/>
    <node if="$(arg enableProfiler)" name="profiler" pkg="tritech_msis" type="tritech_msis" output="screen"/>
    <!--node pkg="tf" type="static_transform_publisher" name="hug_to_seaking_profiler" args="0.7 0.0 -0.14 3.1416 0.0 0.0 /hug /seaking_profiler 100" /-->

    <!-- Echosounders -->
    <group if="$(arg EchoSounders)">
        <!-- Tf -->
        <node pkg="tf" type="static_transform_publisher" name="hug_to_echos11" args="0.6 0.0 0.0 1.57 0.0 0.0 /hug /echosounder11 100" />
        <node pkg="tf" type="static_transform_publisher" name="hug_to_echos12" args="0.6 0.0 0.0 -0.79 0.0 0.0 /hug /echosounder12 100" />
        <node pkg="tf" type="static_transform_publisher" name="hug_to_echos13" args="0.6 0.0 0.0 0.79 0.0 0.0 /hug /echosounder13 100" />
        <node pkg="tf" type="static_transform_publisher" name="hug_to_echos14" args="0.6 0.0 0.0 0.0 0.0 0.0 /hug /echosounder14 100" />
        <node pkg="tf" type="static_transform_publisher" name="hug_to_echos15" args="0.6 0.0 0.0 0.0 -1.57 0.0 /hug /echosounder15 100" />

        <node name="echosounders_driver" pkg="imaginex_echosounder" type="echosounders_driver.py" output="screen"/>
    </group>

    <!-- Bumblebee -->
    <group if="$(arg enableBumblebee)">
        <include file="$(find cola2_hug)/launch/bumblebee2_hug.launch" />
        <node name="stereo_image_proc" pkg="stereo_image_proc" type="stereo_image_proc">
                <env name="ROS_NAMESPACE" value="/stereo_camera"/>
        </node>
        <group if="$(arg enableBumblebeeTF)">
            <node pkg="tf" type="static_transform_publisher" name="hug_to_bumblebee2" args="0.01 0.0 0.032 1.57 0.0 0.0 /rotative_payload /bumblebee2 200" />
        </group>
    </group>

</launch>
